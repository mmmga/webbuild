{
  "name": "Webbuild",
  "tagline": "Run frontend builds inside a docker container",
  "body": "# webbuild #\r\n\r\nwebbuild is a docker container that runs your frontend build tasks. It\r\nwas designed to have them running in a clean predefined environment yet\r\nbeing customizable\r\n\r\nThe container can be used using briefbote/webbuild\r\n\r\n## Inside ##\r\n\r\nThere are three flavors of this container:\r\n\r\n* PHP 5.5\r\n* PHP 5.6\r\n* PHP 7.0\r\n\r\nYou can use specific php versions by using them as a tag:\r\n\r\n`docker run briefbote/webbuild:55` for PHP5.5 for example.\r\n\r\nThe `latest` tag points to the PHP7.0 version\r\n\r\nBuild expects `/src` containing the source code and `/app` containing the release after all build steps have run.\r\n\r\nGit is installed within the container.\r\n\r\nThe package build-essential is installed within the container.\r\n\r\n### RUBY ###\r\n\r\nRUBY builds are now deprecated. Plase inherit from the image and install Ruby in a prebuild.sh.\r\n\r\n## Execution ##\r\n\r\nNODEJS will be installed using nvm. It is respecting .nvmrc. After that, grunt, gulp and bower are installed\r\n\r\n### Customization\r\n\r\n#### Not required build tools\r\n\r\nYou may want to turn off build tools. To do this you need to create a .webbuild/variables.sh file in the base directory. There you can set the following variables:\r\n\r\n|Variable|Build tool|Value to turn off|\r\n|---|---|---|\r\n|RUNULP|gulp|!= 1|\r\n|RUNGRUNT|grunt|!= 1|\r\n|RUNBOWER|bower|!= 1|\r\n|RUNCOMPOSER|composer|!= 1|\r\n\r\nEarlier versions allowed disabling by passing environment variables. Those environment variables are deprecated and will be disabled in the future.\r\n\r\n|Variable|Build tool|\r\n|---|---|\r\n|NOGULP|gulp|\r\n|NOGRUNT|grunt|\r\n|NOBOWER|bower|\r\n|NOCOMPOSER|composer|\r\n\r\nSetting such a variable will disable installation ( except of composer which is always installed ) and execution.\r\n\r\nDoing this will speed up the build process.\r\n\r\n## ONBUILD ##\r\n\r\nThere are two ONBUILD trigger. They copy `prebuild.sh` respectively `postbuild.sh` into the newly image. Therefore \r\nthe following Dockerfile will allow you add standard customizations according to your needs:\r\n\r\n    FROM briefbote/webbuild:latest\r\n    MAINTAINER Test <donotreply@test.de>\r\n\r\n## BASE directory ##\r\n\r\nThe base directory ( the directory where the entrypoint runs the build steps ) is `/src` except when\r\n`/src/src` exists\r\n\r\n### Custom base directory\r\n\r\nIf your base directory follows not the convention use the environment variable `SETBASEDIR` to change it.\r\n\r\n## Build steps ##\r\n\r\n1. Loading `$BASEDIR/.webbuild/variables.sh` if it exists\r\n2. `nvm install 4` or `nvm install` in .webbuild/ is .nvmrc exists there\r\n3. `/exec/prebuild.sh` if it exists\r\n4. `$BASEDIR/.webbuild/prebuild.sh` if it exists\r\n5. `npm install` if `$BASE/package.json` exists\r\n6. `bower` if `$BASE/bower.json` exists\r\n7. `composer` without dev dependencies if `$BASE/composer.json` exists\r\n8. `grunt` if `$BASE/Gruntfile` exists\r\n9. `gulp` if `$BASE/gulpfile.js` exists\r\n10. `$BASE/.webbuild/custom.sh` if it exists, fallback `$BASE/custom.sh` (deprecated)\r\n11. `$BASEDIR/.webbuild/post4. `$BASEDIR/.webbuild/prebuild.sh if it exists`build.sh` if it exists\r\n12. `/exec/postbuild.sh` if it exists\r\n13. Use `/src/build` as `/app` if `/app` is empty\r\n14. Use `/src/release` as `/app` if `/app` is empty\r\n\r\nCurrently a `$BASE/.nvmrc` is still respected.\r\n\r\n## Return codes ##\r\n\r\nNon zero exit codes will be returned when one of the build steps are failing or `/app` is empty after step 10\r\n\r\n## Usage ##\r\n\r\nAssume you want to build a web application in the current directory containing the sources within the `src` subfolder\r\nand you want to place the build in the `app` subfolder.\r\n\r\nThen you can run the build like this:\r\n\r\n    docker run -t briefbote/webbuild:latest -v $PWD/src:/src -v $PWD/app:/app\r\n\r\n### Samples\r\n\r\n#### simple\r\n\r\nA very simplistic sample of it is in the `samples/simple` subfolder of this repository (note that `test/app/` is in the `.gitignore` file).\r\n\r\nTo run the sample change to the test directory and run `run.sh`. It (re)creates the app subfolder ands starts a build\r\nthat actually does nothing more then to copy the `index.html` using a custom.sh into the `/app` folder\r\n\r\n## Code ##\r\n\r\nCode is open source under the Apache 2.0 License. You can obtain it at https://github.com/sascha-andres/webbuild\r\n\r\nIf you want to contribute feel free to open an issue\r\n\r\n## on hub.docker.com ##\r\n\r\nhttps://hub.docker.com/r/briefbote/webbuild/\r\n\r\n## Help\r\n\r\nFeel free to contact me by creating an issue on https://github.com/sascha-andres/webbuild/issues.\r\nYou can connect to me using Twitter at https://twitter.com/livingit_de.\r\n\r\n## History ##\r\n\r\nHistory is now edited on GitHub WIKI: https://github.com/sascha-andres/webbuild/wiki/History",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}